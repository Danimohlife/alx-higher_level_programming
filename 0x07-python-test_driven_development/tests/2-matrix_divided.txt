>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# âœ… Valid Test Cases
>>> matrix_divided([[4, 8], [16, 20]], 4)
[[1.0, 2.0], [4.0, 5.0]]

>>> matrix_divided([[3, 6], [9, 12]], 3)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[1.5, 3.0], [4.5, 6.0]], 1.5)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[10, 20, 30], [40, 50, 60]], 10)
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix_divided([[7, 14], [21, 28]], 7)
[[1.0, 2.0], [3.0, 4.0]]

>>> matrix_divided([[1, 2], [3, "4"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], 2)
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
