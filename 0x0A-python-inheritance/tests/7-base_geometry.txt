BaseGeometry Class Doctest
==========================

Testing the BaseGeometry class.

1. Import the class:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

2. Create an instance:
    >>> bg = BaseGeometry()

3. Test `area()` method:
    It should raise an exception since it's not implemented.
    
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

4. Test `integer_validator()` method:
    Passing a valid integer should not raise any error.
    
    >>> bg.integer_validator("width", 10)  # No output expected

    Invalid cases should raise errors:

    a) Non-integer value:
    >>> bg.integer_validator("width", "10")
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer

    b) Zero value:
    >>> bg.integer_validator("height", 0)
    Traceback (most recent call last):
    ...
    ValueError: height must be greater than 0

    c) Negative value:
    >>> bg.integer_validator("size", -5)
    Traceback (most recent call last):
    ...
    ValueError: size must be greater than 0

    d) Missing argument (should raise TypeError due to missing value):
    bg.integer_validator("age")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    e) Tuple as value (should raise TypeError):
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    f) List as value (should raise TypeError):
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    g) Boolean as value (should raise TypeError):
    bg.integer_validator("age", True)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    h) Set as value (should raise TypeError):
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    i) None as value (should raise TypeError):
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer
